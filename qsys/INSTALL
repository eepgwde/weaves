* Preamble

Walter.Eaves@bigfoot.com

** Overview: The qsys environment and string metrics

The README will tell you more about the system. This file focuses on the
native build of the smet components.

There are two components, a script system (qsys) and some native runtime
extensions in (smet) for String Metrics. Originally, it was only for string
metrics, but I've added others: time0 adds date and time extensions; mcast
adds multicast; regex adds regular expressions; examples and a test.

Darwin, Solaris and Linux 64 bit have only ever had qsys (smet=disable).
And I haven't checked them for a while.

I do regularly build the native plugins, qsys with smet=enable, for Linux
32 bit: the l32/ directory, so the defaults are for that.

*** smet - is a native plugin - GNU tooling

The build of (smet) is optional and is controlled by autogen.sh.

Its build and installation is more complicated than usual because I've made
use of gnulib and gnulib-tool. If you do build the String Metrics component
(smet), then you will need to set up a soft link to the
contrib/kx/kdb+/l32/c.o file and the k.h header - see the C extensions
cookbook notes. I've assumed that this object file has been copied (or
linked) to a local lib/ directory.

If you are building smet on Linux, you'll need to have multilib support for
gcc. On a Debian 64 bit system, you should have the libraries installed to
run the 32bit q. And you probably have rlwrap

  apt-get install rlwrap

You will need a cross-compiling gcc to build this (and maybe C++), so
install these (apt-get install).

  gcc-multilib
  g++-multilib

You need to install the automake tools and support for gnulib.

  gnulib autoconf automake libtool

and then doxygen is useful.

You must have these: gnulib autoconf automake libtool, even if you don't
use the native plugins. The build system needs them.

You wouldn't need the multilib components if you don't build smet.

*** qsys is solely q and Bash scripts

This build is for a automake developer: the "configure" scripts are
generated by this build.

The automake part of the build is performed by the autogen.sh
scripts. There are two of these: one in smet/ and 

The String Metrics component is optional.
 
The installation needs to run gnulib-tool on the smet directory. There is a
script autogen.sh that shows the steps. It may work for you if you have the
l32/ trial distribution.

** qsys deployment profile

If you just want qsys/, then you can use my script with smet=disable. It
assumes you have the l32/q executable.

*** Configuring the automake build system

This is controlled by autogen.sh

**** Basic script only build

From qsys/ run autogen, by default, 

 $ bash ./autogen.sh

This assumes QHOME=$HOME/q and QOSTYPE=l32 and smet=disable

When it runs, it does some configuration and invokes the automake utilities
for an l32/ configuration. After which it should be possible to run these

 $ make all
 $ make install

**** Cleaning

You might need to clean the automake system with this

 $ bash ./autogen.sh clean=yes

**** Build with smet native plugins

I usually run it like this

 $ bash -x -e ./autogen.sh QHOME=$HOME/src/q smet=enable

It takes other switches, nodo will show you what it would do, so a good trace.

 $ bash -x -e ./autogen.sh smet=enable nodo=echo QHOME=$HOME/src/q

**** Other make invocations

Again, you can be safe, and try

 $ make DESTDIR=/var/tmp install

to check the install won't overwrite anything special.

The install will place the shell scripts into ~/bin, a configuration file
into ~/etc/q.rc and some supporting q scripts into ~/share/qsys.

** qsys and with smet enabled

I invoke like this.

 $ bash -x -e ./autogen.sh QHOME=$HOME/src/q smet=enable

This will invoke the smet/autogen.sh
This is where I specify the gnulib-tool modules to import. I do this
because it if fiddly to specify them otherwise.



* Postamble

This file's Emacs file variables

[  Local Variables: ]
[  mode:text ]
[  mode:outline-minor ]
[  mode:auto-fill ]
[  fill-column: 75 ]
[  coding: iso-8859-1-unix ]
[  comment-column:50 ]
[  comment-start: "[  "  ]
[  comment-end:"]" ]
[  End: ]
